#!/bin/bash

# Check if Termux-X11 is installed
if ! command -v termux-setup-storage &> /dev/null; then
    echo "Please install Termux-X11 to proceed."
    exit 1
fi

# Install Docker if not already installed
if ! command -v docker &> /dev/null; then
    echo "Installing Docker..."
    pkg update
    pkg install -y docker
    echo "Docker installed successfully."
fi

# Start the X11 server in Termux
echo "Starting Termux-X11..."
termux-setup-storage
export DISPLAY=:0
Xvfb :1 -screen 0 1024x768x16 &
export DISPLAY=:1

# Start the Windows 11 container
echo "Starting WinEonix emulator..."
cat <<EOF > docker-compose.yml
version: "3"
services:
  windows:
    image: dockurr/windows
    container_name: windows
    devices:
      - /dev/kvm
    cap_add:
      - NET_ADMIN
    ports:
      - 8006:8006
      - 3389:3389/tcp
      - 3389:3389/udp
    stop_grace_period: 2m
    restart: on-failure
    volumes:
      - ./data:/storage
    environment:
      RAM_SIZE: "8G"
      CPU_CORES: 3
      DISK_SIZE: "100G"
EOF

docker-compose up -d

# Function to restart the WinEonix emulator
restart_emulator() {
    echo "Restarting WinEonix emulator..."
    docker-compose down
    docker-compose up -d
    echo "WinEonix emulator restarted."
}

# Display message and wait for user input
echo "WinEonix emulator started."
echo "To restart WinEonix, type 'WinEonix' and press Enter."
read -p "Enter '1' to shutdown WinEonix: " choice

# Check user input
if [[ $choice == "1" ]]; then
    echo "Shutting down WinEonix emulator..."
    docker-compose down
    echo "WinEonix emulator stopped."
elif [[ $choice == "WinEonix" ]]; then
    restart_emulator
else
    echo "Invalid input. Exiting..."
fi
